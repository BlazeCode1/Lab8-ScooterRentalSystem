create database scooter_rental;



create table user
(
    id           int primary key,
    full_name    varchar(100),
    email        varchar(100) unique not null ,
    phone_number varchar(20) unique not null ,
    password     varchar(255) not null ,
    balance      decimal(10, 2) default 0 check (balance >= 0),
    created_at datetime default current_timestamp
);

INSERT INTO user (id, full_name, email, phone_number, password, balance) VALUES
(1, 'Faisal Almansour', 'faisal@example.com', '966500000001', 'hashed_pass_1', 150.00),
(2, 'Aisha Rahman', 'aisha@example.com', '966500000002', 'hashed_pass_2', 200.00),
(3, 'Omar Zaid', 'omar@example.com', '966500000003', 'hashed_pass_3', 120.00),
(4, 'Layla Ahmad', 'layla@example.com', '966500000004', 'hashed_pass_4', 300.00),
(5, 'Khalid Youssef', 'khalid@example.com', '966500000005', 'hashed_pass_5', 80.00);
select * from user;

create table scooter
(
    id int primary key ,
    model varchar(50),
    battery_percentage tinyint check (battery_percentage between 0 and 100),
    is_available boolean not null ,
    latitude decimal(10,6) check(latitude between -90 and 90),
    longitude decimal(10,6) check ( longitude between -180 and 180),
    status ENUM('available','in-use','maintenance','charging') not null
);
INSERT INTO scooter
VALUES
(1, 'Xiaomi M365', 90, true, 24.7136, 46.6753, 'available'),
(2, 'Ninebot Max', 45, false, 24.7132, 46.6751, 'in-use'),
(3, 'Segway ES2', 100, true, 24.7139, 46.6760, 'available'),
(4, 'Okai ES500', 30, false, 24.7129, 46.6742, 'maintenance'),
(5, 'Bird One', 65, true, 24.7150, 46.6770, 'available');
select * from scooter;



create table rental
(
  id int primary key ,
  user_id int,
  scooter_id int,
  start_time datetime not null ,
  end_time datetime not null check (end_time IS NULL OR end_time >= start_time) ,
  start_location decimal(20, 14),
  end_location   decimal(20, 14),
  distance_km decimal(5,2) check ( distance_km >= 0 ),
  total_cost decimal(10,2) check ( total_cost >= 0 ),
  status ENUM ('active', 'completed', 'cancelled'),
  foreign key (user_id) references user(id),
  foreign key (scooter_id) references scooter(id)
);

INSERT INTO rental (id, user_id, scooter_id, start_time, end_time, start_location, end_location, distance_km, total_cost, status)
VALUES
(1, 1, 2, '2025-07-30 08:00:00', '2025-07-30 08:25:00', 24.7132, 24.7160, 2.5, 10.00, 'completed'),
(2, 2, 3, '2025-07-30 09:15:00', '2025-07-30 09:45:00', 24.7139, 24.7175, 3.2, 12.00, 'completed'),
(3, 3, 1, '2025-07-31 10:00:00', null, 24.7136, null, 0.0, 0.00, 'active'),
(4, 4, 4, '2025-07-29 14:00:00', '2025-07-29 14:20:00', 24.7129, 24.7148, 1.5, 6.00, 'completed'),
(5, 5, 5, '2025-07-30 16:00:00', '2025-07-30 16:45:00', 24.7150, 24.7180, 3.8, 15.00, 'completed');
select * from rental;

create table payment
(
    id int primary key ,
    rental_id int,
    user_id int,
    amount decimal not null check (amount >= 0),
    payment_method ENUM ('card', 'wallet', 'apple_pay') not null ,
    paid_at datetime default current_timestamp,
    status ENUM ('paid','failed') not null ,
    foreign key (rental_id) references rental(id),
    foreign key (user_id) references user(id)
);

INSERT INTO payment (id, rental_id, user_id, amount, payment_method, status)
VALUES
(1, 1, 1, 10.00, 'wallet', 'paid'),
(2, 2, 2, 12.00, 'card', 'paid'),
(3, 4, 4, 6.00, 'wallet', 'paid'),
(4, 5, 5, 15.00, 'apple_pay', 'paid'),
(5, 3, 3, 0.00, 'wallet', 'failed'); -- rental in progress

create table maintenance
(
    id int primary key ,
    user_id int,
    scooter_id int,
    description TEXT not null ,
    reported_at datetime,
    status enum('open','in-progress','resolved') not null ,
    resolved_at datetime check ( resolved_at is null or resolved_at >= reported_at ),
    foreign key (user_id) references user(id),
    foreign key (scooter_id) references scooter(id)
);
INSERT INTO maintenance (id, user_id, scooter_id, description, reported_at, status, resolved_at)
VALUES
(1, 1, 4, 'Flat tire reported by user.', '2025-07-30 17:00:00', 'open', null),
(2, 2, 2, 'Scooter does not start.', '2025-07-29 13:00:00', 'resolved', '2025-07-30 09:00:00'),
(3, 4, 1, 'Brakes are loose.', '2025-07-31 11:00:00', 'in-progress', null),
(4, 5, 5, 'Broken headlight.', '2025-07-28 08:00:00', 'resolved', '2025-07-29 12:00:00'),
(5, 3, 3, 'App unable to unlock scooter.', '2025-07-31 10:30:00', 'open', null);
select  * from maintenance;

create table locationLog
(
    id int,
    rental_id int,
    scooter_id int,
    timestamp datetime not null ,
    latitude decimal(10,6)check ( latitude between -90 and 90) ,
    longitude decimal(10,6) check ( longitude between -180 and 180),
    foreign key (rental_id) references rental(id),
    foreign key (scooter_id) references scooter(id)
);

INSERT INTO locationLog (id, rental_id, scooter_id, timestamp, latitude, longitude)
VALUES
(1, 1, 2, '2025-07-30 08:05:00', 24.7133, 46.6754),
(2, 1, 2, '2025-07-30 08:15:00', 24.7142, 46.6762),
(3, 2, 3, '2025-07-30 09:20:00', 24.7145, 46.6765),
(4, 5, 5, '2025-07-30 16:10:00', 24.7160, 46.6775),
(5, 5, 5, '2025-07-30 16:35:00', 24.7178, 46.6785);









